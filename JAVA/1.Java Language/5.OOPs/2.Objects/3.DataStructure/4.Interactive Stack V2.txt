
package interactivestackv2;
import javax.swing.JOptionPane;

public class Program{

 public static void main(String[] args) {
        new Controller().CommandLoop(new Stack());
 }
    
}



class Stack {
    
    private int[] stk;
    private int st;
    private int size;
    
    void push(int v) {
        if (st == 0) {
            JOptionPane.showConfirmDialog(
                    null,
                    "Stack Overflow"
            );
        } else {
            st = st - 1;
            stk[st] = v;
        }
    }
   
    int pop() {
        int temp = -1;
        if (st == size) {
            JOptionPane.showConfirmDialog(
                    null,
                    "Stack Underflow"
            );
        } else {
            temp = stk[st];
            st = st + 1;
        }
        return temp;
    }

    void print() {
        String str = "";
        if (st == size) {
            JOptionPane.showMessageDialog(
                    null,
                    "Stack is Empty"
            );
        } else {
            for (int i = st; i < size; i++) {
                str = str + stk[i] + "::";
            }
            JOptionPane.showMessageDialog(
                    null,
                    str
            );
        }
    }
    
    void setSize(int s)
    {
        size = s;
        stk = new int [s];
        st = s;
    }
    
}

class Controller
{
    String read(String s) {
        String r = JOptionPane.showInputDialog(s);
        return (r == null) ? "Q" : r;
    }

    int readValue(String s) {
        String v1 = JOptionPane
                .showInputDialog(s);
        int v = 0;
        try {
            v = Integer.parseInt(v1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,
                    "Invalid Input");
        }
        return v;
    }
    void CommandLoop(Stack s)
    {
              boolean flag = true;
        String ch = "Q";
        int size = readValue(" Welcome to Stack\n"
                    + "Enter the size of Stack\n" );
        s.setSize(size);
        while (flag) {
            ch = read(" Welcome to Stack\n"
                    + " P - Push" + "\n"
                    + " O - Pop" + "\n"
                    + " D - Display" + "\n"
                    + " Q - Quit" + "\n"
            );
            switch (ch) {
                case "p":
                case "P":
                    s.push(
                            readValue(
                             "Enter value to be Pushed"
                            )
                    );
                    break;
                case "o":
                case "O":
                    JOptionPane.showMessageDialog(
                     null,
                     "The last value popped is "+
                      s.pop()
                    );
                    break;
                case "d":
                case "D":
                    s.print();
                    break;
                case "q":
                case "Q":
                    JOptionPane.showMessageDialog(null,
                            "Thankyou for using Stack");
                    flag = false;
                    break;
                default:
                    JOptionPane.showMessageDialog(null,
                            "Wrong Command");

            }
        }
    }
}
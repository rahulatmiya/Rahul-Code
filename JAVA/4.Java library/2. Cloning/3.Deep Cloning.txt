******************************
Main
******************************

package com.rajeshpatkar;

public class LearningCloneable {

    public static void main(String[] args) throws Exception {
        
        Point pt1 = new Point(5, 5);
        Point pt2 = new Point(10, 5);
        Segment seg1 = new Segment(pt1, pt2);
        Segment clonedSeg1 = seg1.clone();
        System.out.println(
                "printing the original and cloned segment "
                + "objects before modifying\n\n");
        System.out.println("ORG : " + seg1);
        System.out.println("CLONED : " + clonedSeg1);
        System.out.println("\n\nmodifying the cloned Segment... \n\n");
        clonedSeg1.setP1(44, 55);
        clonedSeg1.setP2(66, 77);
        System.out.println("printing the original and cloned segment "
                           + "objects after modification \n\n");
        System.out.println("ORG : " + seg1);
        System.out.println("CLONED : " + clonedSeg1);

    }

}


******************************
Point
******************************

package com.rajeshpatkar;

class Point implements Cloneable
{
    private int x;
    private int y;

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public Point() {
    }

    public int getX() {
        return x;
    }

    public void setX(int x) {
        this.x = x;
    }

    public int getY() {
        return y;
    }

    public void setY(int y) {
        this.y = y;
    }

    @Override
    public String toString() {
        return "Point{" + "x=" + x + ", y=" + y + '}';
    }

    @Override
    public Point clone() throws CloneNotSupportedException {
        return (Point) super.clone(); 
    }
}


******************************
Segment
******************************

package com.rajeshpatkar;

class Segment implements Cloneable {

    private Point p1;
    private Point p2;

    public Segment() {
    }

    public Segment(Point p1, Point p2) {
        this.p1 = p1;
        this.p2 = p2;
    }

    public Point getP1() {
        return p1;
    }

    public void setP1(int x, int y) {
        this.p1.setX(x);
        this.p1.setY(y);
    }

    public void setP2(int x, int y) {
        this.p2.setX(x);
        this.p2.setY(y);
    }

    public Point getP2() {
        return p2;
    }

    @Override
    public String toString() {
        return "Segment{" + "p1=" + p1 + ", p2=" + p2 + '}';
    }

    @Override
    public Segment clone() throws CloneNotSupportedException {
        Segment temp = (Segment) super.clone();
        temp.p1 = this.p1.clone();
        temp.p2 = this.p2.clone();
        return temp;
    }
}
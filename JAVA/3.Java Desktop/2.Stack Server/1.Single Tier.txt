*********************
View - Controller
*********************

package stack.server;

import java.awt.*;
import java.awt.event.ActionEvent;
import javax.swing.*;

public class Program {

    public static void main(String[] args) throws Exception{
        Stack s1 = new Stack();
        JFrame f1 = new JFrame("Stack");
        JTextArea ta = new JTextArea();
        ta.setEditable(false);
        JLabel label1 = new JLabel("No Operation Performed Yet");
        JButton b1 = new JButton("Push");
        JTextField tf = new JTextField(15);
        JButton b2 = new JButton("Pop");
        JPanel p = new JPanel();
        p.add(b1);
        p.add(tf);
        p.add(b2);
        f1.add(BorderLayout.NORTH,label1);
        f1.add(ta);
        f1.add(BorderLayout.SOUTH,p);
        f1.setSize(400,400);
        f1.setVisible(true);
        f1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        b1.addActionListener((ActionEvent e)->{  
           String str = tf.getText();
           if(!str.trim().equals("")){
               try{
                   tf.setText("");
                   s1.push(Integer.parseInt(str));
                   if(s1.isFull())b1.setEnabled(false);
                   else b2.setEnabled(true);
                   ta.setText(s1.toString());
                   label1.setText("The Last item pushed was " + str);
               }
               catch(NumberFormatException ex){
                   label1.setText(
                           "Please enter a valid Number as Input..."
                   );
               }   
           }
        });
        b2.addActionListener((e)->{
           int r = s1.pop();
           if(s1.isEmpty())b2.setEnabled(false);
           else b1.setEnabled(true);
           ta.setText(s1.toString());
           label1.setText("The Last item poped is "+r);
        });
    }   
}


*********************
Model
*********************


package stack.server;


class Stack {
    
   
    private int[] stk = new int[10];
    private int st = 10;  
    
    void push(int v){
        if(st != 0){
            st = st - 1; 
            stk[st] = v;
        }
    }
    
    int pop(){
        int temp = -1;
        if(st != 10){
            temp = stk[st];
            st = st + 1;
        }
        return temp;
    }
    
    @Override
    public String toString(){
        String str = ""; 
        for(int i = st ; i < 10 ; i++){
               str = str + stk[i] + "\n";
        }
        return str;        
    }
    
    public boolean isFull(){
        return st==0;
    }
    
    public boolean isEmpty(){
        return st==10;
    }
}